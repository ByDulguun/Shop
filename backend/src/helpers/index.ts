//random: 1.Санамсаргүй утгыг 128 байтаар үүсгэж, base64 хэлбэрт хөрвүүлнэ. Үүнийг давс эсвэл токен гэх мэт зүйлсэд ашиглаж болно.
//authentication: 2.Хэрэглэгчийн нууц үгийг давс ашиглан хэшлэнэ. Энэ нь нууц үгийг аюулгүйгээр хадгалах болон шалгахад хэрэглэгдэнэ.
//Энэ кодын гол зорилго нь хэрэглэгчийн нууц үгийг хэшлэж, аюулгүй байдлыг хангах явдал юм.

import crypto from "crypto"; //crypto бол Node.js-д суурилсан криптографийн сан бөгөөд аюулгүй байдлын үйлдлүүдийг хийхэд ашигладаг.

const SECRET = "DULGUUN"; //Энэ хэсэгт SECRET нэртэй тогтмол тэмдэгт мөр үүсгэсэн бөгөөд энэ нь хэшлэх үйлдлийн үед нэмэлт нууц байдлыг хангах үүрэгтэй.

export const random = crypto.randomBytes(128).toString("base64"); //randomBytes(128) нь 128 байт урттай санамсаргүй утга үүсгэнэ.
export const authentication = (salt: string, password: string) => {
  //функц нь нууц үг болон давсыг ашиглан хэш үүсгэх үйлдлийг гүйцэтгэнэ.

  return crypto
    .createHmac("sha256", [salt, password].join("/")) //sha256 нь хэшлэх алгоритм юм.//Хэрэглэгчийн salt болон password-ийг "/" тэмдэгтээр нийлүүлж, энэ нийлмэлийг хэш үүсгэхэд ашиглана.
    .update(SECRET) // Хэшлэх үйлдэлд нэмэлт утга буюу нууц (SECRET) оруулж, аюулгүй байдлыг нэмэгдүүлнэ.
    .digest("hex");
};
